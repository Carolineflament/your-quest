{% extends 'base.html.twig' %}

{% block title %}QR scanner{% endblock %}

{% block body %}

<script src="{{ asset('assets/js/html5-qrcode.min.js') }}"></script>

<div class="row mt-5">
    <div class="col text-center">
        <h1>Veuillez scanner le QR code du checkpoint</h1>

        {# Scanner #}        
        <div style="width: 500px; margin: 50px auto;" id="reader"></div>     
        {# End Scanner #}

        {# Scanner message zone #}
        <div style="width: 500px; margin: 50px auto;" id="message"></div>
        {# End Scanner message zone #}

    </div>
</div>

<script>
        function onScanSuccess(decodedText, decodedResult) {
            // Handle on success condition with the decoded text or result.
            console.log(`Decoded QR code : ${decodedText}`, decodedResult);

            /* A décommenter dès qu'on utilisera nos QR codes générés par l'appli
            // TRAITEMENT APRES DECODAGE DU QR CODE (et message d'erreur si un QR code "étranger" à l'appli est scanné)
            // On vérifie que la string retournée commence par "URL:https://yourquest.fr/checkpoint/"
            if (decodedText.startsWith('URL:https://yourquest.fr/checkpoint/')) {
                // Si vrai on retire "URL:" du début de la chaine de caractères
                const checkpointUrl = decodedText.substring(4);
                // On redirige l'utilisateur vers l'URL du checkpoint
                window.location = checkpointUrl;
            } else {
                // Si faux on indique le problème
                // On récupère l'élément div ayant l'id #message
                const messageElement = document.getElementById('message');
                // On écrit dans l'élément
                messageElement.textContent = `ERREUR : le QR code que vous venez de scanner n'a pas été généré par notre application YourQuest ( le décodage du QR code indique : ${decodedText} )`;
            }
            */

            // This will stop the scanner (video feed) and clear the scan area.
            html5QrcodeScanner.clear();
        }

        function onScanError(errorMessage) {
            // handle on error condition, with error message
            // On récupère l'élément div ayant l'id #message
            const messageElement = document.getElementById('message');
            // On écrit dans l'élément
            messageElement.textContent = `Erreur de lecture : ${errorMessage}`;
        }

        var html5QrcodeScanner = new Html5QrcodeScanner("reader", { fps: 10, qrbox: 250 });
        html5QrcodeScanner.render(onScanSuccess);
</script>


{% endblock %}
